// https://stackoverflow.com/a/901144
const params = new Proxy(new URLSearchParams(window.location.search), {
    get: (sp, p) => sp.get(p),
});

// generated by bing chat ai, modified for use
function csvdone(data) {
    var allgames = []
    var rows = data.split(/\r?\n|\r/);
    for (var row = 0; row < rows.length; row++) {
        if (row == 0) {
            continue
        }
        var cells = rows[row].split(',');
        allgames[row - 1] = {
            title: cells[0],
            company: cells[1],
            year: Number(cells[2]),
            platform: cells[3],
            rating: Number(cells[4]),
            hundo: Number(cells[5]),
            plat: Number(cells[6]),
            iconid: cells[7],
            hours: Number(cells[8]),
            playthroughs: Number(cells[9]),
            dlc: Number(cells[10])
        }
    }
    loaddetails(allgames)
}

function loaddetails(allgames) {
    var loading = $("p#loading")
    var details = $("div#details-container")
    
    // url id was validated before, safe to use directly
    var id = params.id

    // get game
    var game = null
    for (const g of allgames) {
        if (g.iconid == id) {
            game = g
            break
        }
    }
    if (game == null) {
        loading.html("Unknown game ID")
        return
    }

    // set icon
    var iconid = id
    if (iconid.length < 6) {
        iconid = "0".repeat(6 - iconid.length) + iconid
    }
    $("div#details-container img.details-icon").prop("src", "/resources/png/xshQS5ZxxjzMEsQ5/" + iconid + ".png")

    // set details
    var title = $("span#title")
    title.html(game.title)
    if (game.dlc == 1) {
        title.html(title.html() + "<span class=\"dlc\">DLC</span>")
    }
    if (game.hundo == 1) {
        title.html(title.html() + "<span class=\"hundo\">100%</span>")
    }
    if (game.plat == 1) {
        title.html(title.html() + "<img alt=\"platinum\" src=\"/resources/png/wT9F00t1BuDE9wRx/plat.png\">")
    }
    $("span#year").html(game.year)
    $("span#company").html(game.company)
    $("span#platform").html(game.platform)
    $("span#hours").html(game.hours)
    var plays = game.playthroughs
    switch (plays) {
        case -1:
            plays = "In-Progress"
            break
        case -9:
            plays = "None (abandoned)"
            break
        case 0:
            plays = "None (incomplete)"
            break
        default:
            break
    }
    $("span#playthroughs").html(plays)
    $("span#rating").html(game.rating)

    // toggle visibility
    loading.hide()
    details.show()

    // notes
    $.ajax({
        url: 'https://raw.githubusercontent.com/egartley/records/master/games/notes.json',
        dataType: 'text',
    }).done(checknotes)
}

function checknotes(data) {
    var notescontainer = $("div#notes-container")
    var notesdata = null
    try {
        notesdata = JSON.parse(data)
    } catch (e) {
        notescontainer.show()
        notescontainer.html("There was an issue while parsing the JSON from <a href=\"https://raw.githubusercontent.com/egartley/records/master/games/notes.json\">https://raw.githubusercontent.com/egartley/records/master/games/notes.json</a>")
        return
    }
    // params.id can be used safely since this function won't be
    // called if its malformed
    if (notesdata[params.id] !== undefined) {
        notescontainer.show()
        // regex generated with bing chat ai, slightly modified
        var sanitized = notesdata[params.id].replace(/[^a-zA-Z0-9.,?!'"\/\- ]/g, '');
        notescontainer.html("<h2>Notes\n</h2>\n<p>" + sanitized + "</p>\n")
    }
}

$(document).ready(function() {
    // validate id before doing anything else
    var id = -1;
    if (/^\d+$/.test(params.id)) {
        id = params.id
    }
    if (id == -1) {
        $("p#loading").html("Malformed ID")
        return
    }
    // get data csv
    $.ajax({
        url: 'https://raw.githubusercontent.com/egartley/records/master/games/games.csv',
        dataType: 'text',
    }).done(csvdone)
})
